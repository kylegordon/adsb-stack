# Lots of useful info at https://github.com/mikenye/docker-readsb/wiki/Guide-to-ADS-B-Data-Receiving%2C-Decoding-and-Sharing%2C-Leveraging-RTLSDR-and-Docker

volumes:
  acarshub:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/acarshub/"
  flightairmap_db:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/flightairmap_db/"
  flightairmap_webapp:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/flightairmap_webapp/"
  graphs1090_rrd:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/graphs1090_rrd/"
  vrsconfig:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/vrsconfig/"


networks:
  adsbnet:
  traefik_proxy:
    external: true
    name: frontend_traefik_proxy

services:
  Watchtower:
    image: v2tec/watchtower:latest
    command: "--label-enable"
    container_name: Watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS}
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_NOTIFICATION_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_NOTIFICATION_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD}
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped

  # From https://github.com/sdr-enthusiasts/docker-acarshub/blob/main/Setting-Up-ACARSHub.MD
  # acarshub:
  #   image: ghcr.io/sdr-enthusiasts/docker-acarshub:latest
  #   tty: true
  #   container_name: acarshub
  #   restart: always
  #   devices:
  #     - /dev/bus/usb:/dev/bus/usb
  #   ports:
  #     - 8080:80
  #     - 5550:5550/udp
  #     - 5555:5555/udp
  #     - 15550:15550
  #     - 15555:15555
  #   volumes:
  #     - acars_data:/run/acars
  #   tmpfs:
  #     - /database:exec,size=64M
  #     - /run:exec,size=64M
  #     - /var/log:size=64M
  #   environment:
  #     - TZ=Etc/UTC
  #     - ENABLE_VDLM=false
  #     - ENABLE_ACARS=false
  #     - MIN_LOG_LEVEL=3
  # #      - TAR1090_URL=http://tar1090
  # #      - IATA_OVERRIDE=UP|UPS|United Parcel Service;GS|FTH|Mountain Aviation (Foothills);GS|EJA|ExecJet
  # #      - ENABLE_ADSB=true
  # #      - ADSB_LAT=
  # #      - ADSB_LON=
  # #      - ADSB_URL=

  # ### Remove this section if you are NOT decoding ACARS
  # acarsdec:
  #   image: ghcr.io/sdr-enthusiasts/docker-acarsdec:latest
  #   tty: true
  #   container_name: acarsdec
  #   restart: always
  #   devices:
  #     - /dev/bus/usb:/dev/bus/usb
  #   environment:
  #     - QUIET_LOGS=true
  #     - TZ=Etc/UTC
  #     - SERIAL=
  #     - GAIN=-10
  #     - PPM=0
  #     - FREQUENCIES=130.025;130.450;131.125;131.550
  #     - FEED_ID=
  #     - SERVER=acars_router
  #   tmpfs:
  #     - /run:exec,size=64M
  #     - /var/log:size=64M
  # #####

  # ### Remove this section if you are NOT decoding VDLM

  # dumpvdl2:
  #   image: ghcr.io/sdr-enthusiasts/docker-dumpvdl2:latest
  #   tty: true
  #   container_name: dumpvdl2
  #   restart: always
  #   devices:
  #     - /dev/bus/usb:/dev/bus/usb
  #   environment:
  #     - QUIET_LOGS=true
  #     - TZ=Etc/UTC
  #     - SERIAL=
  #     - GAIN=40.0
  #     - PPM=0
  #     - FREQUENCIES=136650000;136700000;136975000;136925000;136800000
  #     - FEED_ID=
  #     - VDLM_FILTER_ENABLE=true
  #     - ZMQ_MODE=server
  #     - ZMQ_ENDPOINT=tcp://0.0.0.0:45555
  #     - SERVER=
  #   tmpfs:
  #     - /run:exec,size=64M
  #     - /var/log:size=64M

  # acars_router:
  #   image: ghcr.io/sdr-enthusiasts/acars_router:latest
  #   labels:
  #     - "autoheal=true"
  #   tty: true
  #   ports:
  #     - 55555:15555
  #     - 55550:15550
  #   container_name: acars_router
  #   restart: always
  #   environment:
  #     - TZ=${FEEDER_TZ}
  #     # The line below should be uncommented if you are receiving acars data from acarsdec AND do not want to feed
  #     #- AR_SEND_UDP_ACARS=acarshub:5550
  #     # The line below should be uncommented if you are receiving acars data from acarsdec AND want to feed airframes
  #     #- AR_SEND_UDP_ACARS=acarshub:5550;feed.airframes.io:5550
  #     # The line below should uncommented if you are receiving VDLM and DO NOT want to feed aiframes
  #     #- AR_SEND_UDP_VDLM2=acarshub:5555
  #     # The line below should uncommented if you are receiving VDLM, using dumpvdl2 AND want to feed airframes
  #     #- AR_SEND_UDP_VDLM2=acarshub:5555;feed.airframes.io:5552
  #     # The line below should uncommented if you are receiving VDLM, using vdlm2dec AND want to feed airframes
  #     #- AR_SEND_UDP_VDLM2=acarshub:5555;feed.airframes.io:5555
  #     # The line below should uncommented if you are receiving dumpvdl2 AND using ZMQ (recommended)
  #     #- AR_RECV_ZMQ_VDLM2=dumpvdl2:45555
  #   tmpfs:
  #     - /run:exec,size=64M
  #     - /var/log

  piaware:
    # Working feed
    # Credit to https://github.com/mikenye/docker-piaware
    image: ghcr.io/sdr-enthusiasts/docker-piaware:latest
    tty: true
    container_name: piaware
    restart: unless-stopped
    # Forego USB devices in favour of BEASTHOST and BEASTPORT
    # devices:
    #   - /dev/bus/usb/001/004:/dev/bus/usb/001/004
    ports:
      - 30003:30003
      - 30005:30005
    networks:
      - adsbnet
      - traefik_proxy
    environment:
      - TZ=${TZ}
      - LAT=${LATITUDE}
      - LONG=${LONGITUDE}
      - BEASTHOST=${BEASTHOST}
      - BEASTPORT=30005
      - FEEDER_ID=${PIAWARE_FEEDERID}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1"
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend_traefik_proxy
      - traefik.http.routers.piaware.rule=Host(`piaware.viewpoint.house`)
      - traefik.http.routers.piaware.entrypoints=websecure
      - traefik.http.routers.piaware.tls=true
      - traefik.http.routers.piaware.tls.certresolver=letsencrypt
      - traefik.http.services.piaware01.loadbalancer.server.port=8080
      - traefik.http.services.piaware01.loadbalancer.healthcheck.path=/
      - traefik.http.services.piaware01.loadbalancer.healthcheck.port=8080
      - homepage.group=SDR
      - homepage.name=PiAware
      - homepage.icon=mdi-airplane
      - homepage.href=https://piaware.viewpoint.house
      - homepage.description=PiAware
      - com.centurylinklabs.watchtower.enable=true

  # adsbexchange:
  #   # Working feed
  #   # Credit to https://github.com/mikenye/docker-adsbexchange
  #   image: ghcr.io/sdr-enthusiasts/docker-adsbexchange
  #   tty: true
  #   container_name: adsbx
  #   restart: unless-stopped
  #   networks:
  #     - adsbnet
  #   environment:
  #     - BEASTHOST=${BEASTHOST}
  #     - BEASTPORT=30005
  #     - TZ=${TZ}
  #     - LAT=${LATITUDE}
  #     - LONG=${LONGITUDE}
  #     - ALT=50m
  #     - SITENAME=kylegordon_viewpoint
  #     - UUID=${ADSBEXCHANGE_UUID}
  #     - ADSB_FEED_DESTINATION_HOSTNAME=feed.adsbexchange.com
  #     - MLAT_FEED_DESTINATION_HOSTNAME=feed.adsbexchange.com
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true

  # adsbfi:
  #   # Working feed
  #   # Credit to https://github.com/mikenye/docker-adsbexchange
  #   image: ghcr.io/sdr-enthusiasts/docker-adsbexchange
  #   tty: true
  #   container_name: adsbfi
  #   restart: unless-stopped
  #   networks:
  #     - adsbnet
  #   environment:
  #     - BEASTHOST=${BEASTHOST}
  #     - BEASTPORT=30005
  #     - TZ=${TZ}
  #     - LAT=${LATITUDE}
  #     - LONG=${LONGITUDE}
  #     - ALT=50m
  #     - SITENAME=kylegordon_viewpoint
  #     - UUID=${ADSBEXCHANGE_UUID}
  #     - ADSB_FEED_DESTINATION_HOSTNAME=feed.adsb.fi
  #     - MLAT_FEED_DESTINATION_HOSTNAME=feed.adsb.fi
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: "udp://172.24.32.13:12201"
  #       tag: "{{.Name}}"
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true

  # Multifeeder can probably replace adsbfi and adsbx containers

  fr24feed:
    # Working feed
    # Credit to https://github.com/mikenye/docker-flightradar24
    # image: mikenye/fr24feed:latest
    image: ghcr.io/sdr-enthusiasts/docker-flightradar24
    tty: true
    container_name: fr24feed
    restart: unless-stopped
    # ports:
      # - 8754:8754
    networks:
      - adsbnet
      - traefik_proxy
    environment:
      - TZ=${TZ}
      - BEASTHOST=${BEASTHOST}
      - MLAT=yes
      - FR24KEY=${FR24KEY}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8754"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend_traefik_proxy
      - traefik.http.routers.fr24feed.rule=Host(`fr24feed.viewpoint.house`)
      - traefik.http.routers.fr24feed.entrypoints=websecure
      - traefik.http.routers.fr24feed.tls=true
      - traefik.http.routers.fr24feed.tls.certresolver=letsencrypt
      - traefik.http.services.fr24feed.loadbalancer.server.port=8754
      - traefik.http.services.fr24feed.loadbalancer.healthcheck.path=/
      - traefik.http.services.fr24feed.loadbalancer.healthcheck.port=8754
      - homepage.group=SDR
      - homepage.name=FR24Feed
      - homepage.icon=mdi-airplane
      - homepage.href=https://fr24feed.viewpoint.house
      - homepage.description=FR24Feed
      - com.centurylinklabs.watchtower.enable=true

  # FIXME #1 RBFeeder core dumping frequently
  # Fault of Radarbox hardcoding for Pi hardware. No workaround
  # rbfeeder:
  #   # https://www.radarbox.com/stations/EXTRPI009736
  #   # Credit to https://github.com/mikenye/docker-radarbox
  #   image: mikenye/radarbox:latest
  #   tty: true
  #   container_name: rbfeeder
  #   restart: unless-stopped
  #   networks:
  #     - adsbnet
  #   # volumes:
  #   #   - /tmp/24:/sys/class/thermal/thermal_zone0/temp:ro
  #   environment:
  #     - TZ=${TZ}
  #     - BEASTHOST=${BEASTHOST}
  #     - LAT=${LATITUDE}
  #     - LONG=${LONGITUDE}
  #     - ALT=90
  #     - SHARING_KEY=${RBFEEDER_KEY}

  pfclient:
    # Working feed
    # Credit to https://github.com/mikenye/docker-planefinder
    image: ghcr.io/sdr-enthusiasts/docker-planefinder:latest
    tty: true
    container_name: pfclient
    restart: unless-stopped
    # ports:
    #   - 30053:30053
    networks:
      - adsbnet
      - traefik_proxy
    environment:
      - TZ=${TZ}
      - BEASTHOST=${BEASTHOST}
      - LAT=${LATITUDE}
      - LONG=${LONGITUDE}
      - SHARECODE=${PLANEFINDER_KEY}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend_traefik_proxy
      - traefik.http.routers.planefinder.rule=Host(`planefinder.viewpoint.house`)
      - traefik.http.routers.planefinder.entrypoints=websecure
      - traefik.http.routers.planefinder.tls=true
      - traefik.http.routers.planefinder.tls.certresolver=letsencrypt
      - traefik.http.services.planefinder.loadbalancer.server.port=30053
      - traefik.http.services.planefinder.loadbalancer.healthcheck.path=/
      - traefik.http.services.planefinder.loadbalancer.healthcheck.port=30053
      - homepage.group=SDR
      - homepage.name=PlaneFinder
      - homepage.icon=mdi-airplane
      - homepage.href=https://planefinder.viewpoint.house
      - homepage.description=PlaneFinder
      - com.centurylinklabs.watchtower.enable=true

  opensky:
    # Credit to https://github.com/mikenye/docker-opensky-network
    image: ghcr.io/sdr-enthusiasts/docker-opensky-network:latest
    tty: true
    container_name: opensky
    restart: unless-stopped
    networks:
      - adsbnet
    environment:
      - TZ=${TZ}
      - BEASTHOST=${BEASTHOST}
      - LAT=${LATITUDE}
      - LONG=${LONGITUDE}
      - ALT=${ALTITUDE_METERS}
      - OPENSKY_USERNAME=${OPENSKY_USERNAME}
      - OPENSKY_SERIAL=${OPENSKY_SERIAL}
    labels:
      - com.centurylinklabs.watchtower.enable=true

  graphs1090:
    # Credit to https://github.com/mikenye/docker-graphs1090
    image: mikenye/graphs1090:latest
    tty: true
    container_name: graphs1090
    restart: always
    volumes:
      - graphs1090_rrd:/var/lib/collectd/rrd
    # ports:
    #   - 8088:80
    networks:
      - adsbnet
      - traefik_proxy
    environment:
      - BEASTHOST=${BEASTHOST}
      - MLATHOST=piaware
      - TZ=${TZ}
      - LAT=${LATITUDE}
      - LONG=${LONGITUDE}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
    # healthcheck:
    #   # test: ["CMD", "wget", "--spider", "-tries=1", "--quiet", "http://viewpoint.house:8088"]
    #   test: ["CMD", "timeout", "10s", "bash", "-c", "':>", "/dev/tcp/127.0.0.1/800'", "||", "exit", "1"]
    #   start_period: 60s
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend_traefik_proxy
      - traefik.http.routers.graphs1090.rule=Host(`graphs1090.viewpoint.house`)
      - traefik.http.routers.graphs1090.entrypoints=websecure
      - traefik.http.routers.graphs1090.tls=true
      - traefik.http.routers.graphs1090.tls.certresolver=letsencrypt
      - traefik.http.services.graphs1090.loadbalancer.server.port=80
      - traefik.http.services.graphs1090.loadbalancer.healthcheck.path=/
      - traefik.http.services.graphs1090.loadbalancer.healthcheck.port=80
      - homepage.group=SDR
      - homepage.name=Graphs1090
      - homepage.icon=mdi-airplane
      - homepage.href=https://graphs1090.viewpoint.house
      - homepage.description=Graphs1090
      - com.centurylinklabs.watchtower.enable=true
